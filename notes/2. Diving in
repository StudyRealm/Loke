#include - load prebuilt libraries

for loading user defined libs?

iostream :
	library refer to a family of "class templates" and supporting functions in the C++ standard library that implements 'stream based input/output capabilities'. 
	It is an object oriented alternative to C's FILE-based streams from the C std library.


templates:(wikipedia)
	a feature of C++ programming language that allows functions and classes to operate with "generic" types. This allows a func or class to work on different data types without being rewritten for each one.
	The C++ standard library provides useful functions within a framework of connected templates.
	
	Since C++11, templates may be either variadic (can take variable no. of argument) or non variadic, in earlier version of C++ they are always non-variadic.

	Types(3):
		Function templates:
			it behaves like a func except that the template can have arguments of many different types.
			The format for declaring function templates with type parameters is:

				template<class identifier> declaration;		OR
				template<typename identifier> declaration;

			Both expression have same meaning and behave exactly same way. The latter was introduced to avoid confusion, since a type parameter need not be a class? until C++20.(It can be a basic type such as int or double) 

			Example:
				C++ standard library contains the function template max(x , y) could look like this:	
					template<typename T> T max (T &a, T &b) {return a>b ? a:b;}

					This single function definition works with all data types for which > operator is defined.

			Use of template saves lines in source code, also limit changes to one function description? , making the code easier to read.
			
			A template does not produce small object code. 
			If a program uses both the int and double version of the max() (from above example), the compiler will create a number of object code version according to the given types of arguments. The compiler output  will be similar for  a source code containing two separate non templated version of max(), for both types.

			Usage:
				std:cout << max(3,7) << '\n';
				std::cout << max(3.0,7.0) << '\n';
					the template argument 'T' will automatically deduced by the compiler to be int and double.

				std::cout << max<double>(3, 7.0)
					automatic deduction would fail as the types of the parameters must match the template arguments exactly. Thus in the example it is explicitly instantiated to double is provided.


		
		Class tempaltes:
			provides a specification for generating classes based on parameters. They are generally used to implement containers. It is instantiated by giving a set of types as it's arg.
					

		Variable templates:
			ex:
				template<typename T> constexpr T pi = T{3.141592653589793238462643383L}; // (Almost) from std::numbers::pi.

Generic Programming:
	is a styple of comp programming in which type are used in to-be-specified-later way and then instantiated when neded for specific types provided as parameters.
	


main():(Stackoverflow)


Comments:
	// - single line.
	/* lorem ipsum */ - multi-line comments.

	nesting is not allowes while commenting.

Errors and warnings:(3)

	1.Compiler Time errors: rules set by compiler is not properly followed. 
	2.Runtime errors: successful compilation but shows error while ecexution.
	3.Warnings:

Staments and Functions:
	Statements is a basic unit of computattion in a C++ program, ends with a semicolon.

	Function is a block of organized, reusable code that is used to perform a single, related action.

	*code: ref1.cpp

Input Output:

	streams				 	purpose
	
	std::cout 				printing data to the console.
	std::cin 				reading data from the terminal.space as delimiter.
	std::cerr 				printing errors to the console.
	std::clog				printing log messages to the console.
	std::getline(istream, variable)		reading data from a stream ignoring withspaces and storing the data in a variable. 
	
	Reading data with spaces:
		*code: ref2.cpp

C++ program execution model & memory model:
	Core features: 
		defines how a cpp program should look like.

	Standard library:
		collection of classes and functions, generally written in the core language and the part of the C++ ISO Standard.
		It provides several generic containers, functions to use and manipulate these containers, functions objects, generic strings and streams (interactive and file I/O).
		c++ stdlib incorporates most headers of the ISO c stdlib , ending with '.h', any than those no other headers in the library have such extensions.
		Features of C++ stdlib are declared within the std namespace.
		The C++ stdlib is based upon conventions introduced by the STL and influenced by research in generic programming.

	Standard Template Library(STL):
		is a software library originally designed for the C++ programming language.
		It provides four components called algorithms, containers, functions abd iterators.
		Also provides a set of common classes for C++, that are compatible with elementary operations (such as copying and assignment).
		STL algorithms are independent of containers, reduces complexity.
		It achive it's results through the use of templates, which provides "compile-time polymorphism" , often more efficient than traditional "run-time polymorphism".
		STL was the first library of generic algorithms and data structures for C++.


*** The STL and C++ stdlib are two distinct entities.

Subroutine:
	is a sequence of program instructions that perform a specific task.	
	
Namespaces:(wikipedia)
	is a set of signs(names), used to identify and refer to objects of various kinds. It ensures that all of a given set of objects have unique name so that they can be easily identified.
	In hierarchical file systems, each directory is a separate namespace, that may contain file with exact name.
	In computer programming, they are used of grouping symbols and identifiers around a particular functionality, and to avoid name collision.
	
